---
import Layout from '../layouts/Layout.astro'
import TaskCard from '../components/TaskCard.svelte'
import { actions } from 'astro:actions'

const filter = ['priority', 'status']
    .map(i => ({ key: i, value: Astro.url.searchParams.get(i) }))
    .filter(i => i.value) as { key: string, value: string}[]

let { data } = await Astro.callAction(actions.task.collection, {filter: filter})

---

<Layout 
    title="Task manager"
    buttonLabel="Create task"
    buttonUrl="/tasks/create"
    filter={{ active: filter.length > 0, visible: true }}
>
    <main class="mx-auto max-w-7xl">
        <div class="link-card-grid">
            {(data && data.length > 0) 
                ? data.map(task => <TaskCard task={task}/>) 
                : <div class="text-white flex-col justify-center flex items-center h-full mt-20">
                    <span>No tasks found</span>
                    <span>Press the button above to create a new task</span>
                </div>}
        </div>
    </main>
</Layout>

<style>
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
</style>
